---
title: "Reducing data complexity"
format: 
  html:
    embed-resources: true
    code-fold: true
editor: visual
---

```{r}
#| message: false
library(tidyverse)
library(skimr)
library(corrr)
library(tidyheatmaps)
library(ggbiplot)
```

# Import data

```{r}
#| message: false

# consumer_brand <- read_csv("http://goo.gl/IQl8nc")
consumer_brand <- read_csv("../000_data/008_data_chapter8.csv")
```

# Explore data

```{r}
consumer_brand |> glimpse()
```

# Transform data

```{r}
consumer_brand_scale <- consumer_brand |> 
  mutate(across(.cols = perform:rebuy,
                .fns = ~ scale(x = .x,
                               center = TRUE,
                               scale = TRUE)[,1]))

consumer_brand_scale
```

# Summarize data

```{r}
consumer_brand_scale |> skim()
```

# Calculating correlations

```{r}
correlation_matrix <- consumer_brand_scale |> 
  select(perform:rebuy) |> 
  correlate(method = "pearson",
            use = "pairwise.complete.obs")

correlation_matrix
```

```{r}
correlation_matrix |> 
  autoplot(triangular = "lower",
           method = "HC")
```

# Heatmaps using the mean

```{r}
brand_mean <- consumer_brand_scale |> 
  group_by(brand) |> 
  summarise(across(.cols = perform:trendy,
                   .fns = mean))

brand_mean_long <- brand_mean |> 
  pivot_longer(cols = perform:trendy, 
               names_to = "perceptual_adjective",
               values_to = "value_mean")

tidyheatmap(df = brand_mean_long,
            rows = brand,
            columns = perceptual_adjective,
            values = value_mean,
            border_color = "black",
            display_numbers = TRUE,
            clustering_method = "complete",
            cluster_rows = TRUE, 
            cluster_cols = TRUE)
```

# PCA applied to marketing

```{r}
consumer_brand_pca <- consumer_brand |> 
  select(perform:rebuy) |> 
  prcomp(center = TRUE, scale. = TRUE)

consumer_brand_pca
```

```{r}
consumer_brand_pca |>   
  ggbiplot(groups = consumer_brand$brand,
           scale = 1, pc.biplot = FALSE)
```
