---
title: "Marketing report part 3"
date: 2025-05-31
author: 
  - Norah Jones   
  - Bill Gates
  - Luis Francisco Gomez
format: 
  html:
    toc: true
    code-fold: true
    number-sections: true
    embed-resources: true
editor: visual
---

```{r }
#| label: libraries
#| echo: false
#| message: false

library(tidyverse)
library(sweep)
library(DT)
library(tidymodels)
```

# Modeling

## Introduction

Pending

## Import data

Pending

```{r}
# Import data ----
bike_sales <- bike_sales

# Transform data ----
bike_sales <- bike_sales |> 
  mutate(order.id = factor(x = order.id, 
                           ordered = FALSE),
         order.line = factor(x = order.line, 
                             ordered = TRUE),
         customer.id = factor(x = customer.id, 
                              ordered = FALSE),
         bikeshop.name = factor(x = bikeshop.name, 
                                ordered = FALSE),
         bikeshop.city = factor(x = bikeshop.city, 
                                ordered = FALSE),
         bikeshop.state = factor(x = bikeshop.state, 
                                 ordered = FALSE),
         product.id = factor(x = product.id, 
                             ordered = FALSE),
         model = factor(x = model, 
                        ordered = FALSE),
         category.primary = factor(x = category.primary, 
                                   ordered = FALSE),
         category.secondary = factor(x = category.secondary, 
                                     ordered = FALSE),
         frame = factor(x = frame, 
                        ordered = FALSE))
```

## The product gap

Pending

@tbl-total-revenue-by-cat2-frame

```{r}
#| label: tbl-total-revenue-by-cat2-frame
#| tbl-cap: Total revenue by category secondary and frame
#| message: false

total_revenue_by_cat2_frame <- bike_sales |> 
  group_by(category.secondary, frame) |> 
  summarise(revenue = sum(price.ext)) |> 
  ungroup() |> 
  arrange(desc(revenue)) |> 
  mutate(category.secondary = fct_reorder(.f = category.secondary,
                                          .x = revenue))

total_revenue_by_cat2_frame |> 
  datatable(colnames = c("Category secondary",
                         "Frame",
                         "Revenue")) 
```

Pending

@fig-total-revenue-by-cat2-frame

```{r}
#| label: fig-total-revenue-by-cat2-frame
#| fig-cap: Total revenue by category secondary and frame

## Visualization ----
total_revenue_by_cat2_frame |> 
  ggplot() + 
  geom_point(aes(x = frame,
                 y = revenue),
             position = position_jitter(width = 0.2,
                                        height = 0.2)) +
  scale_y_continuous(labels = scales::label_currency()) + 
  facet_wrap(facets = vars(category.secondary)) +
  labs(x = "Frame",
       y = "Revenue (US Dollars)")
```

## Determine the price of a new product

Pending

### Selecting a new potential product

Pending

-   Cyclocross Aluminum
-   Fat Bike Carbon
-   Over Mountain Aluminum
-   Sport Carbon
-   Triathalon Aluminum

Pending

### Building a model to price a new product

Pending

#### Choosing a model

Pending

-   `price ~ category.secondary + frame`

#### Fit the model

Pending

@tbl-model-2

```{r}
#| label: tbl-model-2
#| tbl-cap: Linear model for price prediction of new products

## Model 2 ----
model2 <- lm(formula = price ~ category.secondary + frame,
             data = bike_sales)

model_tidy2 <- model2 |> 
  tidy()

model_tidy2 |> 
  datatable(colnames = c("Term",
                         "Estimation",
                         "Standard Error",
                         "T-statistic",
                         "P-value")) |> 
  formatRound(c("estimate", 
                "std.error", 
                "statistic", 
                "p.value"))
```

#### Predict the price of the new product

Pending

```{r}
#| label: tbl-model2-price-pred
#| tbl-cap: Price prediction of new products

## Predictions ----
new_data <- tibble(category.secondary = c("Cyclocross",
                                          "Fat Bike",
                                          "Over Mountain",
                                          "Sport",
                                          "Triathalon"),
                   frame = c("Aluminum",
                             "Carbon",
                             "Aluminum",
                             "Carbon",
                             "Aluminum"))

predict_prices_model2 <- predict(object = model2, 
        newdata = new_data) |> 
  enframe(name = "observations",
          value = "pred_price") |> 
  bind_cols(new_data) |> 
  arrange(desc(pred_price))

predict_prices_model2 |> 
  select(-c(observations)) |> 
  datatable(colnames = c("Price prediction",
                         "Category secondary",
                         "Frame")) |> 
  formatRound(c("pred_price"))
```

## Segment bike shops with k-means clustering

Pending

### Bike shop revenue trends

Pending

```{r}
#| message: false

bike_sales_total_revenue <- bike_sales |> 
  group_by(bikeshop.name,
           model,
           category.primary,
           category.secondary,
           frame) |> 
  summarise(total_revenue = sum(price.ext)) |> 
  ungroup()
```

### Prepare data

Pending

#### Normalization

Pending

```{r}
bike_sales_total_revenue_pct <- bike_sales_total_revenue |> 
  group_by(bikeshop.name) |> 
  mutate(total_revenue_pct = total_revenue / sum(total_revenue)) |> 
  ungroup()
```

#### Customer-product table

Pending

```{r}
customer_product_table <- bike_sales_total_revenue_pct |> 
  select(bikeshop.name, 
         model, total_revenue_pct) |> 
  pivot_wider(id_cols = bikeshop.name, 
              names_from = model, 
              values_from = total_revenue_pct, 
              values_fill = 0)
```

### Performing k-means clustering

Pending

```{r}
kmeans_object <- customer_product_table |> 
  select(-bikeshop.name) |> 
  kmeans(centers = 5, 
         algorithm = "Hartigan-Wong")
```

#### Extracting the cluster assignment

Pending

```{r}
#| label: tbl-clusters
#| tbl-cap: Bikeshop clusters

clusters <- kmeans_object |> 
  augment(data = customer_product_table) |> 
  select(bikeshop.name, .cluster)

clusters |> 
  arrange(desc(.cluster)) |> 
  datatable(colnames = c("Bikeshop", "Cluster"))
```

### Data visualization with k-means clustering and principal component analysis

Pending

#### Extracting the first 2 principal components

Pending

```{r}
pca_object <- customer_product_table |> 
  select(-bikeshop.name) |> 
  prcomp(center = TRUE, 
         scale. = FALSE)

pc_1_2 <- pca_object$x |> 
  as_tibble() |> 
  select(PC1, PC2)
```

#### Cluster visualization using k-means and principal component analysis

Pending

```{r}
#| label: fig-clusters-pc-1-2
#| fig-cap: Bikeshop segmentation visualization using principal component analysis

clusters_pc_1_2 <- clusters |> 
  bind_cols(pc_1_2)

clusters_pc_1_2 |> 
  ggplot() +
  geom_point(aes(x = PC1, y = PC2,
                 color = .cluster)) +
  labs(x = "Principal component 1",
       y = "Principal component 2",
       color = "Cluster")
```
