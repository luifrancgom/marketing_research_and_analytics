---
title: "Marketing report part 2"
date: 1900-01-01
author: 
  - Norah Jones   
  - Bill Gates
format: 
  html:
    toc: true
    code-fold: true
    number-sections: true
    embed-resources: true
editor: visual
---

```{r }
#| label: libraries
#| message: false

library(tidyverse)
library(sweep)
library(DT)
```

# Exploring data, visualizing it and applying statistical tests

## Introduction

Blabla blabla @fig-price-quantity

Blabla blabla @tbl-stats-by-cat2-frame

## Import data

Add some text if your group consider to be necessary.

```{r}
# Import data ----
bike_sales <- bike_sales

# Transform data ----
bike_sales <- bike_sales |> 
  mutate(order.id = factor(x = order.id, 
                           ordered = FALSE),
         order.line = factor(x = order.line, 
                             ordered = TRUE),
         customer.id = factor(x = customer.id, 
                              ordered = FALSE),
         bikeshop.name = factor(x = bikeshop.name, 
                                ordered = FALSE),
         bikeshop.city = factor(x = bikeshop.city, 
                                ordered = FALSE),
         bikeshop.state = factor(x = bikeshop.state, 
                                 ordered = FALSE),
         product.id = factor(x = product.id, 
                             ordered = FALSE),
         model = factor(x = model, 
                       ordered = FALSE),
         category.primary = factor(x = category.primary, 
                                   ordered = FALSE),
         category.secondary = factor(x = category.secondary, 
                                     ordered = FALSE),
         frame = factor(x = frame, 
                        ordered = FALSE))
```

## Relation between continuous variables

Bla bla bla @fig-price-quantity

Pending blabla blabla correlation 0.0000229

```{r}
#| label: fig-price-quantity
#| fig-cap: Quantity sold vs price

bike_sales |> 
  ggplot() +
  geom_point(aes(x = quantity, 
                 y = price,
                 color = frame)) +
  labs(x = "Quantity",
       y = "Price (per unit in US Dollars)",
       color = "Frame",
       title = "Quantities sold vs price of frames")
```

Generate the same scatter plot but applying a logarithmic transformation to `price` and `quantity`

```{r}
#| label: fig-price-quantity-log
#| fig-cap: Quantity sold vs price with a logarithmic transformation

## price vs quantity (color by frame) transformed
bike_sales |> 
  ggplot() +
  geom_point(aes(x = quantity, 
                 y = price,
                 color = frame)) +
  scale_x_continuous(transform = "log") +
  scale_y_continuous(transform = "log") +
  labs(x = "Quantity",
       y = "Price (per unit in US Dollars)",
       color = "Frame",
       title = "Quantities sold vs price of frames")
```

## Relation between categorical variables

Use the available functions from the `tidyverse` to create a simple scatterplot between `frame` and `category.secondary`

Also with this kind of plot you can identify the [product gap](https://en.wikipedia.org/wiki/Gap_analysis) in relation to potential products that are not offer

```{r}
#| label: fig-product-gap
#| fig-cap: The product gap to identify new products to offer

bike_sales |> 
  ggplot() + 
  geom_point(aes(x = frame, y = category.secondary),
             position = position_jitter(width = 0.2,
                                        height = 0.2))
```

## Descriptive statistics by group

Add some text pointing out the principal findings as a result of generating the descriptive statistics by group.

### Mean, median and standard deviation for revenue by `(category.secondary, frame)`

Calculate the mean, median and standard deviation for revenue by `category.secondary` and `frame` to understand the behavior of this variable by these categories.

In that way you can identify new products that will be appropriate to be launch by the company taking into account the products that are already offered.

```{r}
#| message: false
#| label: tbl-stats-by-cat2-frame
#| tbl-cap: "Summary statistics for revenue by category secondary and frame"

stats_by_cat2_frame <- bike_sales |> 
  group_by(category.secondary,
           frame) |> 
  summarise(mean_revenue = mean(price.ext),
            median_revenue = median(price.ext),
            sd_revenue = sd(price.ext)) |> 
  ungroup()

names_cat2_frame <- c("Category secondary" = "category.secondary",
                      "Frame" = "frame",
                      "Mean revenue" = "mean_revenue",
                      "Median revenue" = "median_revenue",
                      "Standard deviation" = "sd_revenue")

stats_by_cat2_frame |> 
  datatable(colnames = names_cat2_frame) |> 
  formatRound(columns = c("Mean revenue",
                          "Standard deviation"), 
              digits = 2)
```

### Percentage of total revenue generated by `(category.secondary, frame)`

Calculate the total revenue by `category.secondary` and `frame`. Use this information to specify the percentage of total revenue generated by `category.secondary` and `frame`

In that way you can identify if the total revenue generated by the company is distributed in an homogeneous way by `category.secondary` and `frame`

```{r}
#| message: false
#| label: tbl-revenue-by-cat2-frame
#| tbl-cap: "Percentage of total revenue by category secondary and frame"

revenue_by_cat2_frame <- bike_sales |> 
  group_by(category.secondary, frame) |> 
  summarise(revenue = sum(price.ext)) |> 
  ungroup() |> 
  mutate(pct_revenue = (revenue / sum(revenue))*100) |> 
  arrange(desc(pct_revenue))

names_revenue_cat2_frame <- c("Category secondary" = "category.secondary",
                              "Frame" = "frame",
                              "Revenue" = "revenue",
                              "Percentage of revenue" = "pct_revenue")
  
revenue_by_cat2_frame |> 
  datatable(colnames = names_revenue_cat2_frame) |> 
  formatRound(columns = c("Percentage of revenue"), 
              digits = 2)
```

### Mean, median and standard deviation for revenue by `bikeshop.name`

Calculate the mean, median and standard deviation for revenue by `bikeshop.name` to understand the behavior of this variable by this category.

In that way you can understand the clients of the company and use this information to build a segmentation clustering model.

```{r}
#| message: false
#| label: tbl-stats-by-bike-shop
#| tbl-cap: "Summary statisc for revenue by bike shop"

stats_by_bike_shop <- bike_sales |> 
  group_by(bikeshop.name) |> 
  summarise(mean_revenue = mean(price.ext),
            median_revenue = median(price.ext),
            sd_revenue = sd(price.ext))

names_bike_shop <- c("Bike shop" = "bikeshop.name",
                     "Mean revenue" = "mean_revenue",
                     "Median revenue" = "median_revenue",
                     "Standard deviation" = "sd_revenue")
  
stats_by_bike_shop |> 
  datatable(colnames = names_bike_shop) |> 
  formatRound(columns = c("Mean revenue",
                          "Standard deviation"), 
              digits = 2)
```

### Percentage of total revenue generated by each `bikeshop.name`

Calculate the total revenue by `bikeshop.name`. Use this information to specify the percentage of total revenue generated by `bikeshop.name`

In that way you can identify if it make sense to build a segmentation clustering model by inspecting if the total revenue generated by the company is distributed in an heterogeneous way by `bikeshop.name`

```{r}
#| label: tbl-revenue-by-bike-shop
#| tbl-cap: "Percentage of total revenue by bike shop" 

revenue_by_bike_shop <- bike_sales |> 
  group_by(bikeshop.name) |> 
  summarise(revenue = sum(price.ext)) |> 
  mutate(pct_revenue = (revenue / sum(revenue))*100) |> 
  arrange(desc(pct_revenue))

names_revenue_bike_shop <- c("Bike shop" = "bikeshop.name",
                             "Revenue" = "revenue",
                             "Percentage of revenue" = "pct_revenue")

revenue_by_bike_shop |> 
  datatable(colnames = names_revenue_bike_shop) |> 
  formatRound(columns = c("Percentage of revenue"), 
              digits = 2)
```

## Statistical tests

### Testing group frequencies: `chisq.test()`

Inspect, using an statistical test, if the total revenue is distributed in a homogeneous way by `category.secondary` and `frame` using a $\chi^2$ test for a given vector of probabilities.

Taking into account that there are 13 available models offer by the corporation use $p_i = \frac{1}{13}$ for $i = 1, 2, \ldots, 13$ in the $\chi^2$ test

Once you apply the test point out your conclusion taking into account the p-value of the test

```{r}
# To attack the problem you need to really understand 
# the chi squared test for given probabilities

## First, prepare the data in a similar or in the following
## way
### table_category_secondary_frame <- bike_sales |>
###   group_by(category.secondary, frame) |>
###   summarise(total_revenue = sum(price.ext),
###             .groups = "drop") |>
###   mutate(total_revenue_pct = (total_revenue / sum(total_revenue))*100) |>
###   arrange(desc(total_revenue_pct))

## Second, create a new variable to identify
## the models in a similar or in the following way
### table_models <- table_category_secondary_frame |> 
###  mutate(model = str_c(category.secondary, frame, sep = " ")) |> 
###  select(model, total_revenue)
#### For more information about str_c check out the examples in
#### https://stringr.tidyverse.org/reference/str_c.html

## Third, create a named vector to apply the chi test
## taking into account what is mention in ?chisq.test
## in the section related to the Examples and the part
## about Testing for population probabilities
### To create a named vector check out the deframe
### function from the tidyverse
#### https://tibble.tidyverse.org/reference/enframe.html
##### deframe(table_models)

## Fourth, apply the chi squared test
### deframe(table_models) |> 
###  chisq.test(p = rep.int(x = 1/13, times = 13))
#### rep.int(x = 1/13, times = 13) is just a way
#### to repeat 1/13 thirteen times
##### Check out ?rep.int to understand it

## Fifth, use the tidymodels library:
## library(tidymodels) using tidy
### Remember to load the library in the first code 
### chunk: library(tidymodels)
#### For more information check out
#### https://broom.tidymodels.org/reference/tidy.htest.html
##### deframe(table_models) |> 
#####  chisq.test(p = rep.int(x = 1/13, times = 13)) |> 
#####  tidy()
```

Inspect, using an statistical test, if the total revenue is distributed in a homogeneous way by `bikeshop.name` using a $\chi^2$ test for a given vector of probabilities.

Taking into account that there are 30 bike shops offer use $p_i = \frac{1}{30}$ for $i = 1, 2, \ldots, 30$ in the $\chi^2$ test

Once you apply the test point out your conclusion taking into account the p-value of the test

```{r}
# Apply a similar process as in the case of
# applying the chi squared test for 
# category.secondary and frame in relation to
# the total revenue
## See the comments in that section for more 
## information about how to apply the test
```

### Testing group means: `t.test()`

Inspect, using a two sample t-tests, if the mean revenue between the `Aluminum` and `Carbon` bicycle models are the same in relation to the `frame` variable

Once you apply the test point out your conclusion taking into account the p-value of the test

```{r}
# If you use base R you can apply t.test
## Check out more information in ?t.test
### 
# If you use the tidyverse framework you can 
# use t_test from tidymodels
## For more information check out 
### https://infer.tidymodels.org/reference/t_test.html
```

### Analysis of Variance (ANOVA)

Apply an analysis of variance (ANOVA) using `price` as a response variable

-   First begin with a simple model

    -   `price ~ category.secondary`

-   Then add another variable

    -   `price ~ category.secondary + frame`

-   Expand the model in the following way where you can use the following equivalent expressions

    -   `price ~ category.secondary + frame + category.secondary:frame`
    -   `price ~ category.secondary*frame`[^1]

[^1]: `category.secondary*frame` is a short way to specify all the possible interactions between these 2 categorical variables which is equivalent to `category.secondary + frame + category.secondary:frame`

```{r}
# Use the functions aov and anova from base R
# to apply the analysis of variance (ANOVA)
## As an example you can begin with a simple model
### aov(formula = price ~ category.secondary, 
###    data = bike_sales) |> 
###  anova() |> 
###  tidy()

## Then change the formula argument with the 
## different alternative models
```

Taking into account the analysis of variance, point out if it make sense to add `category.secondary`, `frame` and its interaction to the model.

Depending on the answer to the above question point out if it make sense to try the following model:

-   `price ~ category.secondary*frame*bikeshop.state`[^2]

[^2]: `category.secondary*frame*bikeshop.state` is a way to specify all the possible interactions between these 3 categorical variables. In this case the model will have $2^3 - 1 = 7$ terms
